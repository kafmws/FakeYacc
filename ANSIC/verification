cast_expression
nullable:No
firsts:INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,(,SIZEOF
follows:-,+,*,/,%,LEFT_OP,RIGHT_OP,=,MUL_ASSIGN,DIV_ASSIGN,MOD_ASSIGN,ADD_ASSIGN,SUB_ASSIGN,LEFT_ASSIGN,RIGHT_ASSIGN,AND_ASSIGN,XOR_ASSIGN,OR_ASSIGN,AND_OP,?,OR_OP,;,,,),|,NE_OP,EQ_OP,&,^,<,>,LE_OP,GE_OP,],:,}

compound_statement
nullable:No
firsts:{
follows:STRUCT,UNION,ENUM,VOLATILE,AUTO,TYPEDEF,DOUBLE,INT,UNSIGNED,STATIC,FLOAT,REGISTER,CONST,SHORT,EXTERN,SIGNED,TYPE_NAME,CHAR,LONG,VOID,*,(,IDENTIFIER,$end

type_name
nullable:No
firsts:VOID,CHAR,SHORT,INT,LONG,FLOAT,DOUBLE,SIGNED,UNSIGNED,TYPE_NAME,ENUM,UNION,STRUCT,CONST,VOLATILE
follows:)

init_declarator
nullable:No
firsts:IDENTIFIER,(,*
follows:,,;

direct_declarator
nullable:No
firsts:IDENTIFIER,(
follows:=,),:,,,VOID,LONG,CHAR,TYPEDEF,EXTERN,STATIC,AUTO,REGISTER,TYPE_NAME,SIGNED,SHORT,CONST,FLOAT,UNSIGNED,INT,DOUBLE,VOLATILE,ENUM,UNION,STRUCT,{,;

unary_expression
nullable:No
firsts:INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,(,SIZEOF
follows:-,+,*,/,%,LEFT_OP,RIGHT_OP,=,MUL_ASSIGN,DIV_ASSIGN,MOD_ASSIGN,ADD_ASSIGN,SUB_ASSIGN,LEFT_ASSIGN,RIGHT_ASSIGN,AND_ASSIGN,XOR_ASSIGN,OR_ASSIGN,AND_OP,?,OR_OP,;,,,),|,NE_OP,EQ_OP,&,^,<,>,LE_OP,GE_OP,],:,}

struct_declaration_list
nullable:No
firsts:VOID,LONG,CHAR,UNSIGNED,TYPE_NAME,SIGNED,INT,DOUBLE,SHORT,CONST,VOLATILE,FLOAT,ENUM,UNION,STRUCT
follows:}

and_expression
nullable:No
firsts:INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,SIZEOF,(
follows:AND_OP,?,OR_OP,;,,,),|,^,],:,}

additive_expression
nullable:No
firsts:(,INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,SIZEOF
follows:GE_OP,LE_OP,>,<,^,&,EQ_OP,NE_OP,|,),,,;,OR_OP,?,AND_OP,LEFT_OP,RIGHT_OP,},:,]

abstract_declarator
nullable:No
firsts:*
follows:),,,,

direct_abstract_declarator
nullable:No
firsts:[,(
follows:),,,,

assignment_operator
nullable:No
firsts:=,MUL_ASSIGN,DIV_ASSIGN,MOD_ASSIGN,ADD_ASSIGN,SUB_ASSIGN,LEFT_ASSIGN,RIGHT_ASSIGN,AND_ASSIGN,XOR_ASSIGN,OR_ASSIGN
follows:INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,(,SIZEOF

multiplicative_expression
nullable:No
firsts:(,INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,SIZEOF
follows:+,-,GE_OP,LE_OP,>,<,^,&,EQ_OP,NE_OP,|,),,,;,OR_OP,?,AND_OP,RIGHT_OP,LEFT_OP,},:,]

primary_expression
nullable:No
firsts:IDENTIFIER,CONSTANT,STRING_LITERAL,(
follows:[,.,PTR_OP,INC_OP,DEC_OP,(,-,+,*,/,%,GE_OP,LE_OP,>,<,^,&,EQ_OP,NE_OP,|,),,,;,OR_OP,?,AND_OP,OR_ASSIGN,XOR_ASSIGN,AND_ASSIGN,RIGHT_ASSIGN,LEFT_ASSIGN,SUB_ASSIGN,ADD_ASSIGN,MOD_ASSIGN,DIV_ASSIGN,MUL_ASSIGN,=,RIGHT_OP,LEFT_OP,},:,]

pointer
nullable:No
firsts:*
follows:[,(,IDENTIFIER,,,,,)

unary_operator
nullable:No
firsts:&,*,+,-,~,!
follows:INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,(,SIZEOF

declaration_list
nullable:No
firsts:VOID,LONG,CHAR,TYPEDEF,EXTERN,STATIC,AUTO,REGISTER,TYPE_NAME,SIGNED,SHORT,CONST,FLOAT,UNSIGNED,INT,DOUBLE,VOLATILE,ENUM,UNION,STRUCT
follows:{

identifier_list
nullable:No
firsts:IDENTIFIER
follows:)

enumerator_list
nullable:No
firsts:IDENTIFIER
follows:}

exclusive_or_expression
nullable:No
firsts:INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,SIZEOF,(
follows:AND_OP,?,OR_OP,;,,,),|,],:,}

declaration_specifiers
nullable:No
firsts:TYPEDEF,EXTERN,STATIC,AUTO,REGISTER,VOID,CHAR,SHORT,INT,LONG,FLOAT,DOUBLE,SIGNED,UNSIGNED,TYPE_NAME,ENUM,UNION,STRUCT,CONST,VOLATILE
follows:IDENTIFIER,(,*,;,,,,,)

type_qualifier_list
nullable:No
firsts:CONST,VOLATILE
follows:*,IDENTIFIER,(

struct_declarator
nullable:No
firsts:IDENTIFIER,(,*
follows:,,;

equality_expression
nullable:No
firsts:INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,SIZEOF,(
follows:&,^,AND_OP,?,OR_OP,;,,,),|,],:,}

initializer_list
nullable:No
firsts:INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,(,SIZEOF,{
follows:},,

struct_declarator_list
nullable:No
firsts:IDENTIFIER,(,*
follows:;

parameter_type_list
nullable:No
firsts:VOID,LONG,CHAR,TYPE_NAME,SIGNED,EXTERN,SHORT,CONST,REGISTER,FLOAT,STATIC,UNSIGNED,INT,DOUBLE,TYPEDEF,AUTO,VOLATILE,ENUM,UNION,STRUCT
follows:)

translation_unit
nullable:No
firsts:IDENTIFIER,(,VOID,LONG,CHAR,TYPE_NAME,SIGNED,EXTERN,SHORT,CONST,REGISTER,FLOAT,STATIC,UNSIGNED,INT,DOUBLE,TYPEDEF,AUTO,VOLATILE,*,ENUM,UNION,STRUCT
follows:$end

init_declarator_list
nullable:No
firsts:IDENTIFIER,(,*
follows:;

inclusive_or_expression
nullable:No
firsts:INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,SIZEOF,(
follows:?,OR_OP,;,,,),AND_OP,],:,}

conditional_expression
nullable:No
firsts:INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,SIZEOF,(
follows:),,,;,:,],}

constant_expression
nullable:No
firsts:INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,SIZEOF,(
follows::,],,,;,}

specifier_qualifier_list
nullable:No
firsts:VOID,CHAR,SHORT,INT,LONG,FLOAT,DOUBLE,SIGNED,UNSIGNED,TYPE_NAME,ENUM,UNION,STRUCT,CONST,VOLATILE
follows:),*,IDENTIFIER,(

statement
nullable:No
firsts:IDENTIFIER,CASE,DEFAULT,;,INC_OP,DEC_OP,&,*,+,-,~,!,CONSTANT,STRING_LITERAL,(,SIZEOF,GOTO,CONTINUE,BREAK,RETURN,SWITCH,WHILE,DO,FOR,IF,{
follows:WHILE,ELSE,SWITCH,DO,CASE,DEFAULT,GOTO,CONTINUE,BREAK,IF,FOR,RETURN,INC_OP,~,DEC_OP,STRING_LITERAL,*,CONSTANT,-,!,+,&,{,IDENTIFIER,SIZEOF,(,}

type_qualifier
nullable:No
firsts:CONST,VOLATILE
follows:TYPEDEF,EXTERN,STATIC,AUTO,REGISTER,VOID,CHAR,SHORT,INT,LONG,FLOAT,DOUBLE,SIGNED,UNSIGNED,TYPE_NAME,ENUM,UNION,STRUCT,CONST,VOLATILE,*,),,,,,;,(,IDENTIFIER

shift_expression
nullable:No
firsts:INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,SIZEOF,(
follows:^,&,EQ_OP,NE_OP,|,),,,;,OR_OP,?,AND_OP,<,>,LE_OP,GE_OP,},:,]

enumerator
nullable:No
firsts:IDENTIFIER
follows:,,}

labeled_statement
nullable:No
firsts:IDENTIFIER,CASE,DEFAULT
follows:(,SIZEOF,IDENTIFIER,{,&,+,!,-,CONSTANT,*,STRING_LITERAL,DEC_OP,~,INC_OP,RETURN,FOR,IF,BREAK,CONTINUE,GOTO,DEFAULT,CASE,DO,SWITCH,ELSE,WHILE,}

statement_list
nullable:No
firsts:;,INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,(,SIZEOF,GOTO,CONTINUE,BREAK,RETURN,SWITCH,WHILE,DO,CASE,DEFAULT,FOR,IF,{
follows:}

external_declaration
nullable:No
firsts:IDENTIFIER,(,VOID,LONG,CHAR,TYPE_NAME,SIGNED,EXTERN,SHORT,CONST,REGISTER,FLOAT,STATIC,UNSIGNED,INT,DOUBLE,TYPEDEF,AUTO,VOLATILE,*,ENUM,UNION,STRUCT
follows:$end,IDENTIFIER,(,*,VOID,LONG,CHAR,TYPE_NAME,SIGNED,EXTERN,SHORT,CONST,REGISTER,FLOAT,STATIC,UNSIGNED,INT,DOUBLE,TYPEDEF,AUTO,VOLATILE,ENUM,UNION,STRUCT

expression
nullable:No
firsts:INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,(,SIZEOF
follows:),],:,;

type_specifier
nullable:No
firsts:VOID,CHAR,SHORT,INT,LONG,FLOAT,DOUBLE,SIGNED,UNSIGNED,TYPE_NAME,ENUM,UNION,STRUCT
follows:TYPEDEF,EXTERN,STATIC,AUTO,REGISTER,VOID,CHAR,SHORT,INT,LONG,FLOAT,DOUBLE,SIGNED,UNSIGNED,TYPE_NAME,ENUM,UNION,STRUCT,CONST,VOLATILE,*,),,,,,;,(,IDENTIFIER

expression_statement
nullable:No
firsts:;,INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,(,SIZEOF
follows:;,INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,(,SIZEOF,),SWITCH,WHILE,DO,CASE,DEFAULT,GOTO,CONTINUE,BREAK,IF,FOR,RETURN,{,ELSE,}

argument_expression_list
nullable:No
firsts:INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,(,SIZEOF
follows:)

parameter_declaration
nullable:No
firsts:VOID,LONG,CHAR,TYPEDEF,EXTERN,STATIC,AUTO,REGISTER,TYPE_NAME,SIGNED,SHORT,CONST,FLOAT,UNSIGNED,INT,DOUBLE,VOLATILE,ENUM,UNION,STRUCT
follows:,,)

assignment_expression
nullable:No
firsts:INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,(,SIZEOF
follows:),,,;,:,],}

declaration
nullable:No
firsts:VOID,LONG,CHAR,TYPEDEF,EXTERN,STATIC,AUTO,REGISTER,TYPE_NAME,SIGNED,SHORT,CONST,FLOAT,UNSIGNED,INT,DOUBLE,VOLATILE,ENUM,UNION,STRUCT
follows:VOID,LONG,CHAR,TYPE_NAME,SIGNED,EXTERN,SHORT,CONST,REGISTER,FLOAT,STATIC,UNSIGNED,INT,DOUBLE,TYPEDEF,AUTO,VOLATILE,ENUM,UNION,STRUCT,*,(,IDENTIFIER,$end,{

declarator
nullable:No
firsts:IDENTIFIER,(,*
follows:=,),:,,,VOID,LONG,CHAR,TYPEDEF,EXTERN,STATIC,AUTO,REGISTER,TYPE_NAME,SIGNED,SHORT,CONST,FLOAT,UNSIGNED,INT,DOUBLE,VOLATILE,ENUM,UNION,STRUCT,{,;

initializer
nullable:No
firsts:INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,(,SIZEOF,{
follows:,,},;

struct_declaration
nullable:No
firsts:VOID,LONG,CHAR,UNSIGNED,TYPE_NAME,SIGNED,INT,DOUBLE,SHORT,CONST,VOLATILE,FLOAT,ENUM,UNION,STRUCT
follows:VOID,LONG,CHAR,UNSIGNED,TYPE_NAME,SIGNED,INT,DOUBLE,SHORT,CONST,VOLATILE,FLOAT,ENUM,UNION,STRUCT,}

storage_class_specifier
nullable:No
firsts:TYPEDEF,EXTERN,STATIC,AUTO,REGISTER
follows:TYPEDEF,EXTERN,STATIC,AUTO,REGISTER,VOID,CHAR,SHORT,INT,LONG,FLOAT,DOUBLE,SIGNED,UNSIGNED,TYPE_NAME,ENUM,UNION,STRUCT,CONST,VOLATILE,IDENTIFIER,(,*,;,,,,,)

logical_and_expression
nullable:No
firsts:INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,SIZEOF,(
follows:?,OR_OP,;,,,),],:,}

relational_expression
nullable:No
firsts:INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,SIZEOF,(
follows:^,&,EQ_OP,NE_OP,|,),,,;,OR_OP,?,AND_OP,},:,]

parameter_list
nullable:No
firsts:VOID,LONG,CHAR,TYPE_NAME,SIGNED,EXTERN,SHORT,CONST,REGISTER,FLOAT,STATIC,UNSIGNED,INT,DOUBLE,TYPEDEF,AUTO,VOLATILE,ENUM,UNION,STRUCT
follows:,,)

jump_statement
nullable:No
firsts:GOTO,CONTINUE,BREAK,RETURN
follows:SWITCH,WHILE,DO,CASE,DEFAULT,GOTO,CONTINUE,BREAK,IF,FOR,RETURN,INC_OP,~,DEC_OP,STRING_LITERAL,*,CONSTANT,-,!,+,&,{,IDENTIFIER,SIZEOF,(,ELSE,}

function_definition
nullable:No
firsts:IDENTIFIER,(,VOID,LONG,CHAR,TYPE_NAME,SIGNED,EXTERN,SHORT,CONST,REGISTER,FLOAT,STATIC,UNSIGNED,INT,DOUBLE,TYPEDEF,AUTO,VOLATILE,*,ENUM,UNION,STRUCT
follows:STRUCT,UNION,ENUM,VOLATILE,AUTO,TYPEDEF,DOUBLE,INT,UNSIGNED,STATIC,FLOAT,REGISTER,CONST,SHORT,EXTERN,SIGNED,TYPE_NAME,CHAR,LONG,VOID,*,(,IDENTIFIER,$end

postfix_expression1
nullable:Yes
firsts:[,.,PTR_OP,INC_OP,DEC_OP,(
follows:-,+,*,/,%,LEFT_OP,RIGHT_OP,=,MUL_ASSIGN,DIV_ASSIGN,MOD_ASSIGN,ADD_ASSIGN,SUB_ASSIGN,LEFT_ASSIGN,RIGHT_ASSIGN,AND_ASSIGN,XOR_ASSIGN,OR_ASSIGN,AND_OP,?,OR_OP,;,,,),|,NE_OP,EQ_OP,&,^,<,>,LE_OP,GE_OP,],:,}

direct_declarator1
nullable:Yes
firsts:[,(
follows:,,:,),=,VOID,LONG,CHAR,TYPEDEF,EXTERN,STATIC,AUTO,REGISTER,TYPE_NAME,SIGNED,SHORT,CONST,FLOAT,UNSIGNED,INT,DOUBLE,VOLATILE,ENUM,UNION,STRUCT,{,;

logical_or_expression1
nullable:Yes
firsts:OR_OP
follows:?,;,,,),],:,}

struct_declaration_list1
nullable:Yes
firsts:VOID,LONG,CHAR,UNSIGNED,TYPE_NAME,SIGNED,INT,DOUBLE,SHORT,CONST,VOLATILE,FLOAT,ENUM,UNION,STRUCT
follows:}

and_expression1
nullable:Yes
firsts:&
follows:^,|,),,,;,OR_OP,?,AND_OP,},:,]

additive_expression1
nullable:Yes
firsts:+,-
follows:LEFT_OP,RIGHT_OP,AND_OP,?,OR_OP,;,,,),|,NE_OP,EQ_OP,&,^,<,>,LE_OP,GE_OP,],:,}

direct_abstract_declarator1
nullable:Yes
firsts:],INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,SIZEOF,(,),VOID,LONG,CHAR,TYPE_NAME,SIGNED,EXTERN,SHORT,CONST,REGISTER,FLOAT,STATIC,UNSIGNED,INT,DOUBLE,TYPEDEF,AUTO,VOLATILE,ENUM,UNION,STRUCT
follows:),,,,

multiplicative_expression1
nullable:Yes
firsts:*,/,%
follows:-,+,LEFT_OP,RIGHT_OP,AND_OP,?,OR_OP,;,,,),|,NE_OP,EQ_OP,&,^,<,>,LE_OP,GE_OP,],:,}

declaration_list1
nullable:Yes
firsts:VOID,LONG,CHAR,TYPE_NAME,SIGNED,EXTERN,SHORT,CONST,REGISTER,FLOAT,STATIC,UNSIGNED,INT,DOUBLE,TYPEDEF,AUTO,VOLATILE,ENUM,UNION,STRUCT
follows:{

identifier_list1
nullable:Yes
firsts:,
follows:)

enumerator_list1
nullable:Yes
firsts:,
follows:}

exclusive_or_expression1
nullable:Yes
firsts:^
follows:|,),,,;,OR_OP,?,AND_OP,},:,]

type_qualifier_list1
nullable:Yes
firsts:CONST,VOLATILE
follows:(,IDENTIFIER,*

equality_expression1
nullable:Yes
firsts:EQ_OP,NE_OP
follows:^,&,|,),,,;,OR_OP,?,AND_OP,},:,]

initializer_list1
nullable:Yes
firsts:,
follows:,,}

struct_declarator_list1
nullable:Yes
firsts:,
follows:;

translation_unit1
nullable:Yes
firsts:IDENTIFIER,(,*,VOID,LONG,CHAR,TYPE_NAME,SIGNED,EXTERN,SHORT,CONST,REGISTER,FLOAT,STATIC,UNSIGNED,INT,DOUBLE,TYPEDEF,AUTO,VOLATILE,ENUM,UNION,STRUCT
follows:$end

init_declarator_list1
nullable:Yes
firsts:,
follows:;

inclusive_or_expression1
nullable:Yes
firsts:|
follows:),,,;,OR_OP,?,AND_OP,},:,]

shift_expression1
nullable:Yes
firsts:LEFT_OP,RIGHT_OP
follows:AND_OP,?,OR_OP,;,,,),|,NE_OP,EQ_OP,&,^,<,>,LE_OP,GE_OP,],:,}

statement_list1
nullable:Yes
firsts:SWITCH,WHILE,DO,CASE,DEFAULT,GOTO,CONTINUE,BREAK,IF,FOR,RETURN,INC_OP,~,DEC_OP,STRING_LITERAL,*,CONSTANT,-,!,+,&,{,IDENTIFIER,SIZEOF,(
follows:}

expression1
nullable:Yes
firsts:,
follows:),;,:,]

argument_expression_list1
nullable:Yes
firsts:,
follows:)

logical_and_expression1
nullable:Yes
firsts:AND_OP
follows:),,,;,OR_OP,?,},:,]

relational_expression1
nullable:Yes
firsts:<,>,LE_OP,GE_OP
follows:AND_OP,?,OR_OP,;,,,),|,NE_OP,EQ_OP,&,^,],:,}

parameter_list1
nullable:Yes
firsts:,
follows:,,)

compound_statement2
nullable:No
firsts:},;,INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,(,SIZEOF,GOTO,CONTINUE,BREAK,RETURN,SWITCH,WHILE,DO,CASE,DEFAULT,FOR,IF,{
follows:$end,IDENTIFIER,(,*,VOID,LONG,CHAR,TYPE_NAME,SIGNED,EXTERN,SHORT,CONST,REGISTER,FLOAT,STATIC,UNSIGNED,INT,DOUBLE,TYPEDEF,AUTO,VOLATILE,ENUM,UNION,STRUCT

type_name2
nullable:Yes
firsts:*
follows:)

init_declarator2
nullable:Yes
firsts:=
follows:,,;

unary_expression2
nullable:No
firsts:INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,(,SIZEOF
follows:GE_OP,LE_OP,>,<,^,&,EQ_OP,NE_OP,|,),,,;,OR_OP,?,AND_OP,OR_ASSIGN,XOR_ASSIGN,AND_ASSIGN,RIGHT_ASSIGN,LEFT_ASSIGN,SUB_ASSIGN,ADD_ASSIGN,MOD_ASSIGN,DIV_ASSIGN,MUL_ASSIGN,=,RIGHT_OP,LEFT_OP,%,/,*,+,-,},:,]

abstract_declarator2
nullable:Yes
firsts:[,(
follows:,,,,)

direct_abstract_declarator2
nullable:No
firsts:],INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,SIZEOF,(
follows:,,,,)

direct_abstract_declarator22
nullable:No
firsts:*,),VOID,LONG,CHAR,TYPE_NAME,SIGNED,EXTERN,SHORT,CONST,REGISTER,FLOAT,STATIC,UNSIGNED,INT,DOUBLE,TYPEDEF,AUTO,VOLATILE,ENUM,UNION,STRUCT
follows:,,,,)

multiplicative_expression2
nullable:No
firsts:INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,(,SIZEOF
follows:-,+,LEFT_OP,RIGHT_OP,AND_OP,?,OR_OP,;,,,),|,NE_OP,EQ_OP,&,^,<,>,LE_OP,GE_OP,],:,}

pointer2
nullable:Yes
firsts:*
follows:(,[,),,,,,IDENTIFIER

declaration_specifiers2
nullable:Yes
firsts:TYPEDEF,EXTERN,STATIC,AUTO,REGISTER,VOID,CHAR,SHORT,INT,LONG,FLOAT,DOUBLE,SIGNED,UNSIGNED,TYPE_NAME,ENUM,UNION,STRUCT,CONST,VOLATILE
follows:,,,,;,*,(,IDENTIFIER,)

struct_declarator2
nullable:Yes
firsts::
follows:,,;

struct_declarator_list2
nullable:Yes
firsts:,,:
follows:;

parameter_type_list2
nullable:Yes
firsts:,
follows:)

init_declarator_list2
nullable:Yes
firsts:,,=
follows:;

conditional_expression2
nullable:Yes
firsts:?
follows:;,,,),},],:

constant_expression2
nullable:Yes
firsts:?
follows:,,],:,},;

specifier_qualifier_list2
nullable:Yes
firsts:VOID,CHAR,SHORT,INT,LONG,FLOAT,DOUBLE,SIGNED,UNSIGNED,TYPE_NAME,ENUM,UNION,STRUCT,CONST,VOLATILE
follows:*,),(,IDENTIFIER

statement2
nullable:No
firsts:),INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,(,SIZEOF
follows:WHILE,ELSE,(,SIZEOF,IDENTIFIER,{,&,+,!,-,CONSTANT,*,STRING_LITERAL,DEC_OP,~,INC_OP,RETURN,FOR,IF,BREAK,CONTINUE,GOTO,DEFAULT,CASE,DO,SWITCH,}

statement22
nullable:No
firsts:},;,INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,(,SIZEOF,GOTO,CONTINUE,BREAK,RETURN,SWITCH,WHILE,DO,CASE,DEFAULT,FOR,IF,{
follows:

statement222
nullable:Yes
firsts:ELSE
follows:ELSE,WHILE,(,SIZEOF,IDENTIFIER,{,&,+,!,-,CONSTANT,*,STRING_LITERAL,DEC_OP,~,INC_OP,RETURN,FOR,IF,BREAK,CONTINUE,GOTO,DEFAULT,CASE,DO,SWITCH,}

shift_expression2
nullable:No
firsts:INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,(,SIZEOF
follows:GE_OP,LE_OP,>,<,AND_OP,?,OR_OP,;,,,),|,NE_OP,EQ_OP,&,^,],:,}

shift_expression22
nullable:No
firsts:VOID,CHAR,SHORT,INT,LONG,FLOAT,DOUBLE,SIGNED,UNSIGNED,TYPE_NAME,ENUM,UNION,STRUCT,CONST,VOLATILE,INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,(,SIZEOF
follows:GE_OP,LE_OP,>,<,AND_OP,?,OR_OP,;,,,),|,NE_OP,EQ_OP,&,^,],:,}

enumerator2
nullable:Yes
firsts:=
follows:,,}

statement_list2
nullable:No
firsts:),INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,(,SIZEOF
follows:}

statement_list22
nullable:No
firsts:},;,INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,(,SIZEOF,GOTO,CONTINUE,BREAK,RETURN,SWITCH,WHILE,DO,CASE,DEFAULT,FOR,IF,{
follows:

statement_list222
nullable:Yes
firsts:SWITCH,WHILE,DO,CASE,DEFAULT,GOTO,CONTINUE,BREAK,IF,FOR,RETURN,INC_OP,~,DEC_OP,STRING_LITERAL,*,CONSTANT,-,!,+,&,{,IDENTIFIER,SIZEOF,(,ELSE
follows:}

type_specifier2
nullable:Yes
firsts:{
follows:),*,VOLATILE,CONST,STRUCT,UNION,ENUM,TYPE_NAME,UNSIGNED,SIGNED,DOUBLE,FLOAT,LONG,INT,SHORT,CHAR,VOID,REGISTER,AUTO,STATIC,EXTERN,TYPEDEF,IDENTIFIER,(,;,,,,

type_specifier22
nullable:Yes
firsts:{
follows:),*,VOLATILE,CONST,STRUCT,UNION,ENUM,TYPE_NAME,UNSIGNED,SIGNED,DOUBLE,FLOAT,LONG,INT,SHORT,CHAR,VOID,REGISTER,AUTO,STATIC,EXTERN,TYPEDEF,IDENTIFIER,(,;,,,,

parameter_declaration2
nullable:Yes
firsts:IDENTIFIER,(,*
follows:,,)

parameter_declaration22
nullable:Yes
firsts:{,IDENTIFIER,(,*,TYPEDEF,EXTERN,STATIC,AUTO,REGISTER,VOID,CHAR,SHORT,INT,LONG,FLOAT,DOUBLE,SIGNED,UNSIGNED,TYPE_NAME,ENUM,UNION,STRUCT,CONST,VOLATILE
follows:,,)

assignment_expression2
nullable:No
firsts:INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,(,SIZEOF
follows:;,,,),],:,}

assignment_expression22
nullable:Yes
firsts:?
follows:;,,,),],:,}

declaration2
nullable:No
firsts:;,IDENTIFIER,(,*
follows:$end,IDENTIFIER,(,*,STRUCT,UNION,ENUM,VOLATILE,AUTO,TYPEDEF,DOUBLE,INT,UNSIGNED,STATIC,FLOAT,REGISTER,CONST,SHORT,EXTERN,SIGNED,TYPE_NAME,CHAR,LONG,VOID,{

declaration22
nullable:No
firsts:;,IDENTIFIER,(,*,TYPEDEF,EXTERN,STATIC,AUTO,REGISTER,VOID,CHAR,SHORT,INT,LONG,FLOAT,DOUBLE,SIGNED,UNSIGNED,TYPE_NAME,ENUM,UNION,STRUCT,CONST,VOLATILE,{
follows:$end,IDENTIFIER,(,*,STRUCT,UNION,ENUM,VOLATILE,AUTO,TYPEDEF,DOUBLE,INT,UNSIGNED,STATIC,FLOAT,REGISTER,CONST,SHORT,EXTERN,SIGNED,TYPE_NAME,CHAR,LONG,VOID,{

declarator2
nullable:No
firsts:IDENTIFIER,(,*
follows:,,:,),=,;,{,STRUCT,UNION,ENUM,VOLATILE,DOUBLE,INT,UNSIGNED,FLOAT,CONST,SHORT,SIGNED,TYPE_NAME,REGISTER,AUTO,STATIC,EXTERN,TYPEDEF,CHAR,LONG,VOID

initializer2
nullable:No
firsts:INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,(,SIZEOF
follows:,,},;

initializer22
nullable:No
firsts:},,
follows:,,},;

initializer222
nullable:Yes
firsts:?
follows:,,},;

struct_declaration2
nullable:No
firsts:VOID,CHAR,SHORT,INT,LONG,FLOAT,DOUBLE,SIGNED,UNSIGNED,TYPE_NAME,ENUM,UNION,STRUCT,CONST,VOLATILE,IDENTIFIER,(,*
follows:STRUCT,UNION,ENUM,FLOAT,VOLATILE,CONST,SHORT,DOUBLE,INT,SIGNED,TYPE_NAME,UNSIGNED,CHAR,LONG,VOID,}

struct_declaration22
nullable:No
firsts:VOID,CHAR,SHORT,INT,LONG,FLOAT,DOUBLE,SIGNED,UNSIGNED,TYPE_NAME,ENUM,UNION,STRUCT,CONST,VOLATILE,IDENTIFIER,(,*,{
follows:STRUCT,UNION,ENUM,FLOAT,VOLATILE,CONST,SHORT,DOUBLE,INT,SIGNED,TYPE_NAME,UNSIGNED,CHAR,LONG,VOID,}

relational_expression2
nullable:No
firsts:INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,(,SIZEOF
follows:AND_OP,?,OR_OP,;,,,),|,NE_OP,EQ_OP,&,^,],:,}

relational_expression22
nullable:No
firsts:VOID,CHAR,SHORT,INT,LONG,FLOAT,DOUBLE,SIGNED,UNSIGNED,TYPE_NAME,ENUM,UNION,STRUCT,CONST,VOLATILE,INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,(,SIZEOF
follows:AND_OP,?,OR_OP,;,,,),|,NE_OP,EQ_OP,&,^,],:,}

parameter_list2
nullable:Yes
firsts:IDENTIFIER,(,*,,
follows:,,)

parameter_list22
nullable:Yes
firsts:{,IDENTIFIER,(,*,,,TYPEDEF,EXTERN,STATIC,AUTO,REGISTER,VOID,CHAR,SHORT,INT,LONG,FLOAT,DOUBLE,SIGNED,UNSIGNED,TYPE_NAME,ENUM,UNION,STRUCT,CONST,VOLATILE
follows:,,)

jump_statement2
nullable:No
firsts:;,INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,(,SIZEOF
follows:(,SIZEOF,IDENTIFIER,{,&,+,!,-,CONSTANT,*,STRING_LITERAL,DEC_OP,~,INC_OP,RETURN,FOR,IF,BREAK,CONTINUE,GOTO,DEFAULT,CASE,DO,WHILE,SWITCH,},ELSE

function_definition2
nullable:No
firsts:VOID,LONG,CHAR,TYPEDEF,EXTERN,STATIC,AUTO,REGISTER,TYPE_NAME,SIGNED,SHORT,CONST,FLOAT,UNSIGNED,INT,DOUBLE,VOLATILE,ENUM,UNION,STRUCT,{
follows:$end,IDENTIFIER,(,*,VOID,LONG,CHAR,TYPE_NAME,SIGNED,EXTERN,SHORT,CONST,REGISTER,FLOAT,STATIC,UNSIGNED,INT,DOUBLE,TYPEDEF,AUTO,VOLATILE,ENUM,UNION,STRUCT

function_definition22
nullable:No
firsts:*,IDENTIFIER,(
follows:$end,IDENTIFIER,(,*,VOID,LONG,CHAR,TYPE_NAME,SIGNED,EXTERN,SHORT,CONST,REGISTER,FLOAT,STATIC,UNSIGNED,INT,DOUBLE,TYPEDEF,AUTO,VOLATILE,ENUM,UNION,STRUCT

function_definition222
nullable:No
firsts:IDENTIFIER,(,CONST,VOLATILE,*
follows:$end,IDENTIFIER,(,*,VOID,LONG,CHAR,TYPE_NAME,SIGNED,EXTERN,SHORT,CONST,REGISTER,FLOAT,STATIC,UNSIGNED,INT,DOUBLE,TYPEDEF,AUTO,VOLATILE,ENUM,UNION,STRUCT

postfix_expression12
nullable:No
firsts:),INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,(,SIZEOF
follows:GE_OP,LE_OP,>,<,^,&,EQ_OP,NE_OP,|,),,,;,OR_OP,?,AND_OP,OR_ASSIGN,XOR_ASSIGN,AND_ASSIGN,RIGHT_ASSIGN,LEFT_ASSIGN,SUB_ASSIGN,ADD_ASSIGN,MOD_ASSIGN,DIV_ASSIGN,MUL_ASSIGN,=,RIGHT_OP,LEFT_OP,%,/,*,+,-,},:,]

direct_declarator12
nullable:No
firsts:INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,SIZEOF,(,]
follows:{,STRUCT,UNION,ENUM,VOLATILE,DOUBLE,INT,UNSIGNED,FLOAT,CONST,SHORT,SIGNED,TYPE_NAME,REGISTER,AUTO,STATIC,EXTERN,TYPEDEF,CHAR,LONG,VOID,=,),:,,,;

direct_declarator122
nullable:No
firsts:VOID,LONG,CHAR,TYPE_NAME,SIGNED,EXTERN,SHORT,CONST,REGISTER,FLOAT,STATIC,UNSIGNED,INT,DOUBLE,TYPEDEF,AUTO,VOLATILE,ENUM,UNION,STRUCT,IDENTIFIER,)
follows:{,STRUCT,UNION,ENUM,VOLATILE,DOUBLE,INT,UNSIGNED,FLOAT,CONST,SHORT,SIGNED,TYPE_NAME,REGISTER,AUTO,STATIC,EXTERN,TYPEDEF,CHAR,LONG,VOID,=,),:,,,;

struct_declaration_list12
nullable:No
firsts:VOID,CHAR,SHORT,INT,LONG,FLOAT,DOUBLE,SIGNED,UNSIGNED,TYPE_NAME,ENUM,UNION,STRUCT,CONST,VOLATILE,IDENTIFIER,(,*
follows:}

struct_declaration_list122
nullable:No
firsts:VOID,CHAR,SHORT,INT,LONG,FLOAT,DOUBLE,SIGNED,UNSIGNED,TYPE_NAME,ENUM,UNION,STRUCT,CONST,VOLATILE,IDENTIFIER,(,*,{
follows:}

declaration_list12
nullable:No
firsts:;,IDENTIFIER,(,*
follows:{

declaration_list122
nullable:No
firsts:;,IDENTIFIER,(,*,TYPEDEF,EXTERN,STATIC,AUTO,REGISTER,VOID,CHAR,SHORT,INT,LONG,FLOAT,DOUBLE,SIGNED,UNSIGNED,TYPE_NAME,ENUM,UNION,STRUCT,CONST,VOLATILE,{
follows:{

translation_unit12
nullable:No
firsts:VOID,LONG,CHAR,TYPEDEF,EXTERN,STATIC,AUTO,REGISTER,TYPE_NAME,SIGNED,SHORT,CONST,FLOAT,UNSIGNED,INT,DOUBLE,VOLATILE,ENUM,UNION,STRUCT,{
follows:$end

translation_unit122
nullable:No
firsts:;,IDENTIFIER,(,*
follows:$end

statement_list12
nullable:No
firsts:?,;,,
follows:}

statement_list122
nullable:Yes
firsts:SWITCH,WHILE,DO,CASE,DEFAULT,GOTO,CONTINUE,BREAK,IF,FOR,RETURN,INC_OP,~,DEC_OP,STRING_LITERAL,*,CONSTANT,-,!,+,&,{,IDENTIFIER,SIZEOF,(,ELSE
follows:}

statement_list1222
nullable:No
firsts:),INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,(,SIZEOF
follows:}

statement_list12222
nullable:No
firsts:;,INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,(,SIZEOF
follows:}

statement_list122222
nullable:No
firsts:},;,INC_OP,DEC_OP,&,*,+,-,~,!,IDENTIFIER,CONSTANT,STRING_LITERAL,(,SIZEOF,GOTO,CONTINUE,BREAK,RETURN,SWITCH,WHILE,DO,CASE,DEFAULT,FOR,IF,{
follows:

$accept
nullable:No
firsts:IDENTIFIER,(,VOID,LONG,CHAR,TYPE_NAME,SIGNED,EXTERN,SHORT,CONST,REGISTER,FLOAT,STATIC,UNSIGNED,INT,DOUBLE,TYPEDEF,AUTO,VOLATILE,*,ENUM,UNION,STRUCT
follows: